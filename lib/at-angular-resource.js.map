{"version":3,"sources":["at-angular-resource.ts"],"names":["at","at.combineResource","at.Resource","at.Resource.constructor","at.ResourceWithUpdate","at.ResourceWithUpdate.constructor","at.resource","at.resource.resourceClassFactory"],"mappings":";;;;;AAAA,IAAO,EAAE,CAgER;AAhED,WAAO,EAAE,EAAC,CAAC;IAETA,YAAYA,CAACA;IAQbA,yBAAyBA,QAAaA,EAAEA,KAAWA;QACjDC,OAAOA,CAACA,MAAMA,CAACA,QAAQA,EAAEA,IAAIA,QAAQA,CAACA,UAAUA,CAACA,KAAKA,CAACA,CAACA,CAACA;IAC3DA,CAACA;IAGDD;QAMEE,kBAAYA,KAAWA;YAAIC,eAAeA,CAACA,IAAIA,EAAEA,KAAKA,CAACA,CAACA;QAACA,CAACA;QAW5DD,eAACA;IAADA,CAjBAF,AAiBCE,IAAAF;IAjBYA,WAAQA,WAiBpBA,CAAAA;IAGDA;QAAwCI,sCAAQA;QAC9CA,4BAAYA,KAAWA;YAAIC,kBAAMA,KAAKA,CAACA,CAACA;QAACA,CAACA;QAI5CD,yBAACA;IAADA,CALAJ,AAKCI,EALuCJ,QAAQA,EAK/CA;IALYA,qBAAkBA,qBAK9BA,CAAAA;IAMDA,kBAAyBA,UAAkBA,EAAEA,SAAiBA;QAC5DM,MAAMA,CAACA,UAACA,MAAWA;YACjBA,8BAA8BA,SAA0BA;gBAAEC,cAAcA;qBAAdA,WAAcA,CAAdA,sBAAcA,CAAdA,IAAcA;oBAAdA,6BAAcA;;gBACtEA,IAAMA,WAAWA,GAAkBA,SAASA,CAACA,MAAMA,CAACA,GAAGA,EAAEA,MAAMA,CAACA,MAAMA,EAAEA,MAAMA,CAACA,OAAOA,EAAEA,MAAMA,CAACA,OAAOA,CAACA,CAACA;gBACxGA,MAAMA,CAACA,EAAEA,CAACA,aAAaA,OAAhBA,EAAEA,GAAeA,OAAOA,CAACA,MAAMA,CAACA,WAAWA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,EAAEA,WAAWA,EAAEA;oBACtFA,SAASA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,WAAWA,CAACA,SAASA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,CAACA,SAASA,EAAEA;wBAEhFA,UAAUA,EAAEA,WAAWA;qBAExBA,CAACA,CAACA;iBACJA,CAACA,CAACA,SAAKA,IAAIA,EAACA,CAACA;YAChBA,CAACA;YACDD,oBAAoBA,CAACA,OAAOA,GAAGA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA,MAAMA,CAACA,MAAMA,CAACA,OAAOA,IAA+BA,EAAEA,CAACA,CAACA;YACvGA,EAAEA,CAACA,iBAAiBA,CAACA,UAAUA,CAACA,CAACA,OAAOA,CAACA,SAASA,EAAEA,oBAAoBA,CAACA,CAACA;QAC5EA,CAACA,CAACA;IACJA,CAACA;IAfeN,WAAQA,WAevBA,CAAAA;AAGHA,CAACA,EAhEM,EAAE,KAAF,EAAE,QAgER","file":"at-angular-resource.js","sourcesContent":["module at {\n\n  'use strict';\n\n  /* tslint:disable:no-any */\n  type ResourceClass = angular.resource.IResourceClass<any>;\n  export type ResourceArray = angular.resource.IResourceArray<any>;\n  type ResourceService = angular.resource.IResourceService;\n\n  /* istanbul ignore next */\n  function combineResource(instance: any, model?: any): void {\n    angular.extend(instance, new instance.$_Resource(model));\n  }\n\n  /* istanbul ignore next */\n  export class Resource implements angular.resource.IResource<Resource> {\n    public static get: (params?: Object) => Resource;\n    public static query: (params?: Object) => ResourceArray;\n    public static remove: () => Resource;\n    public static save: () => Resource;\n    public static delete: () => Resource;\n    constructor(model?: any) { combineResource(this, model); }\n    public $get: (params?: Object) => angular.IPromise<this>;\n    public $query: (params?: Object) => angular.IPromise<angular.resource.IResourceArray<this>>;\n    public $remove: (params?: Object) => angular.IPromise<this>;\n    public $save: (params?: Object) => angular.IPromise<this>;\n    public $delete: (params?: Object) => angular.IPromise<this>;\n    public $promise: angular.IPromise<this>;\n    public $resolved: boolean;\n    public toJSON: () => {\n      [index: string]: any;\n    };\n  }\n\n  /* istanbul ignore next */\n  export class ResourceWithUpdate extends Resource {\n    constructor(model?: any) { super(model); }\n    public static update: () => ResourceWithUpdate;\n    public $update: () => angular.IPromise<this>;\n    public $promise: angular.IPromise<this>;\n  }\n\n  export interface IResourceAnnotation {\n    (moduleName: string, className: string): at.IClassAnnotationDecorator;\n  }\n\n  export function resource(moduleName: string, className: string): at.IClassAnnotationDecorator {\n    return (target: any): void => {\n      function resourceClassFactory($resource: ResourceService, ...args: any[]): any {\n        const newResource: ResourceClass = $resource(target.url, target.params, target.actions, target.options);\n        return at.attachInjects(angular.extend(newResource, angular.extend(target, newResource, {\n          prototype: angular.extend(newResource.prototype, angular.extend(target.prototype, {\n            /* tslint:disable:variable-name */\n            $_Resource: newResource\n            /* tslint:enable:variable-name */\n          }))\n        })), ...args);\n      }\n      resourceClassFactory.$inject = (['$resource']).concat(target.$inject /* istanbul ignore next */ || []);\n      at.getOrCreateModule(moduleName).factory(className, resourceClassFactory);\n    };\n  }\n  /* tslint:enable:no-any */\n\n}\n"],"sourceRoot":"/source/"}