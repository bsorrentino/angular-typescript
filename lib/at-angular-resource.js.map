{"version":3,"sources":["at-angular-resource.ts"],"names":["at","at.combineResource","at.Resource","at.Resource.constructor","at.ResourceWithUpdate","at.ResourceWithUpdate.constructor","at.resource","at.resource.resourceClassFactory"],"mappings":";;;;;AAEA,IAAO,EAAE,CAgER;AAhED,WAAO,EAAE,EAAC,CAAC;IAEPA,YAAYA,CAACA;IAQbA,yBAAyBA,QAAaA,EAAEA,KAAWA;QAC/CC,OAAOA,CAACA,MAAMA,CAACA,QAAQA,EAAEA,IAAIA,QAAQA,CAACA,UAAUA,CAACA,KAAKA,CAACA,CAACA,CAACA;IAC7DA,CAACA;IAGDD;QAMIE,kBAAYA,KAAWA;YAAIC,eAAeA,CAACA,IAAIA,EAAEA,KAAKA,CAACA,CAACA;QAACA,CAACA;QAW9DD,eAACA;IAADA,CAjBAF,AAiBCE,IAAAF;IAjBYA,WAAQA,WAiBpBA,CAAAA;IAGDA;QAAwCI,sCAAQA;QAC5CA,4BAAYA,KAAWA;YAAIC,kBAAMA,KAAKA,CAACA,CAACA;QAACA,CAACA;QAI9CD,yBAACA;IAADA,CALAJ,AAKCI,EALuCJ,QAAQA,EAK/CA;IALYA,qBAAkBA,qBAK9BA,CAAAA;IAMDA,kBAAyBA,UAAkBA,EAAEA,SAAiBA;QAC1DM,MAAMA,CAACA,UAACA,MAAWA;YACfA,8BAA8BA,SAA0BA;gBAAEC,cAAcA;qBAAdA,WAAcA,CAAdA,sBAAcA,CAAdA,IAAcA;oBAAdA,6BAAcA;;gBACpEA,IAAMA,WAAWA,GAAkBA,SAASA,CAACA,MAAMA,CAACA,GAAGA,EAAEA,MAAMA,CAACA,MAAMA,EAAEA,MAAMA,CAACA,OAAOA,EAAEA,MAAMA,CAACA,OAAOA,CAACA,CAACA;gBACxGA,MAAMA,CAACA,EAAEA,CAACA,aAAaA,OAAhBA,EAAEA,GAAeA,OAAOA,CAACA,MAAMA,CAACA,WAAWA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,EAAEA,WAAWA,EAAEA;oBACpFA,SAASA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,WAAWA,CAACA,SAASA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,CAACA,SAASA,EAAEA;wBAE9EA,UAAUA,EAAEA,WAAWA;qBAE1BA,CAACA,CAACA;iBACNA,CAACA,CAACA,SAAKA,IAAIA,EAACA,CAACA;YAClBA,CAACA;YACDD,oBAAoBA,CAACA,OAAOA,GAAGA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA,MAAMA,CAACA,MAAMA,CAACA,OAAOA,IAA+BA,EAAEA,CAACA,CAACA;YACvGA,EAAEA,CAACA,iBAAiBA,CAACA,UAAUA,CAACA,CAACA,OAAOA,CAACA,SAASA,EAAEA,oBAAoBA,CAACA,CAACA;QAC9EA,CAACA,CAACA;IACNA,CAACA;IAfeN,WAAQA,WAevBA,CAAAA;AAGLA,CAACA,EAhEM,EAAE,KAAF,EAAE,QAgER","file":"at-angular-resource.js","sourcesContent":["/// <reference path=\"../typings/main.d.ts\"/>\r\n\r\nmodule at {\r\n\r\n    'use strict';\r\n\r\n    /* tslint:disable:no-any */\r\n    type ResourceClass = angular.resource.IResourceClass<any>;\r\n    export type ResourceArray = angular.resource.IResourceArray<any>;\r\n    type ResourceService = angular.resource.IResourceService;\r\n\r\n    /* istanbul ignore next */\r\n    function combineResource(instance: any, model?: any): void {\r\n        angular.extend(instance, new instance.$_Resource(model));\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    export class Resource implements angular.resource.IResource<Resource> {\r\n        public static get: (params?: Object) => Resource;\r\n        public static query: (params?: Object) => ResourceArray;\r\n        public static remove: () => Resource;\r\n        public static save: () => Resource;\r\n        public static delete: () => Resource;\r\n        constructor(model?: any) { combineResource(this, model); }\r\n        public $get: (params?: Object) => angular.IPromise<this>;\r\n        public $query: (params?: Object) => angular.IPromise<angular.resource.IResourceArray<this>>;\r\n        public $remove: (params?: Object) => angular.IPromise<this>;\r\n        public $save: (params?: Object) => angular.IPromise<this>;\r\n        public $delete: (params?: Object) => angular.IPromise<this>;\r\n        public $promise: angular.IPromise<this>;\r\n        public $resolved: boolean;\r\n        public toJSON: () => {\r\n            [index: string]: any;\r\n        };\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    export class ResourceWithUpdate extends Resource {\r\n        constructor(model?: any) { super(model); }\r\n        public static update: () => ResourceWithUpdate;\r\n        public $update: () => angular.IPromise<this>;\r\n        public $promise: angular.IPromise<this>;\r\n    }\r\n\r\n    export interface IResourceAnnotation {\r\n        (moduleName: string, className: string): at.IClassAnnotationDecorator;\r\n    }\r\n\r\n    export function resource(moduleName: string, className: string): at.IClassAnnotationDecorator {\r\n        return (target: any): void => {\r\n            function resourceClassFactory($resource: ResourceService, ...args: any[]): any {\r\n                const newResource: ResourceClass = $resource(target.url, target.params, target.actions, target.options);\r\n                return at.attachInjects(angular.extend(newResource, angular.extend(target, newResource, {\r\n                    prototype: angular.extend(newResource.prototype, angular.extend(target.prototype, {\r\n                        /* tslint:disable:variable-name */\r\n                        $_Resource: newResource\r\n                        /* tslint:enable:variable-name */\r\n                    }))\r\n                })), ...args);\r\n            }\r\n            resourceClassFactory.$inject = (['$resource']).concat(target.$inject /* istanbul ignore next */ || []);\r\n            at.getOrCreateModule(moduleName).factory(className, resourceClassFactory);\r\n        };\r\n    }\r\n    /* tslint:enable:no-any */\r\n\r\n}\r\n"],"sourceRoot":"/source/"}